/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import { Contract } from 'ethers';
export class IParaSwapLiquiditySwapAdapter__factory {
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'assetToSwapFrom',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'assetToSwapTo',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amountToSwap',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'minAmountToReceive',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'swapAllBalanceOffset',
                type: 'uint256',
            },
            {
                internalType: 'bytes',
                name: 'swapCalldata',
                type: 'bytes',
            },
            {
                internalType: 'address',
                name: 'augustus',
                type: 'address',
            },
            {
                components: [
                    {
                        internalType: 'uint256',
                        name: 'amount',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint256',
                        name: 'deadline',
                        type: 'uint256',
                    },
                    {
                        internalType: 'uint8',
                        name: 'v',
                        type: 'uint8',
                    },
                    {
                        internalType: 'bytes32',
                        name: 'r',
                        type: 'bytes32',
                    },
                    {
                        internalType: 'bytes32',
                        name: 's',
                        type: 'bytes32',
                    },
                ],
                internalType: 'struct IParaSwapLiquiditySwapAdapter.PermitSignature',
                name: 'permitParams',
                type: 'tuple',
            },
        ],
        name: 'swapAndDeposit',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
//# sourceMappingURL=IParaSwapLiquiditySwapAdapter__factory.js.map