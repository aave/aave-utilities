/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from '../../../../../common';

export interface GhoDiscountRateStrategyInterface extends utils.Interface {
  functions: {
    'DISCOUNT_RATE()': FunctionFragment;
    'DISCOUNT_TOKEN()': FunctionFragment;
    'GHO_DISCOUNTED_PER_DISCOUNT_TOKEN()': FunctionFragment;
    'MIN_DEBT_TOKEN_BALANCE()': FunctionFragment;
    'MIN_DISCOUNT_TOKEN_BALANCE()': FunctionFragment;
    'calculateDiscountRate(uint256,uint256)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'DISCOUNT_RATE'
      | 'DISCOUNT_TOKEN'
      | 'GHO_DISCOUNTED_PER_DISCOUNT_TOKEN'
      | 'MIN_DEBT_TOKEN_BALANCE'
      | 'MIN_DISCOUNT_TOKEN_BALANCE'
      | 'calculateDiscountRate',
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: 'DISCOUNT_RATE',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'DISCOUNT_TOKEN',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'GHO_DISCOUNTED_PER_DISCOUNT_TOKEN',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MIN_DEBT_TOKEN_BALANCE',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'MIN_DISCOUNT_TOKEN_BALANCE',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'calculateDiscountRate',
    values: [BigNumberish, BigNumberish],
  ): string;

  decodeFunctionResult(
    functionFragment: 'DISCOUNT_RATE',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'DISCOUNT_TOKEN',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'GHO_DISCOUNTED_PER_DISCOUNT_TOKEN',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MIN_DEBT_TOKEN_BALANCE',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'MIN_DISCOUNT_TOKEN_BALANCE',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'calculateDiscountRate',
    data: BytesLike,
  ): Result;

  events: {};
}

export interface GhoDiscountRateStrategy extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: GhoDiscountRateStrategyInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DISCOUNT_RATE(overrides?: CallOverrides): Promise<[BigNumber]>;

    DISCOUNT_TOKEN(overrides?: CallOverrides): Promise<[string]>;

    GHO_DISCOUNTED_PER_DISCOUNT_TOKEN(
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;

    MIN_DEBT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<[BigNumber]>;

    MIN_DISCOUNT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<[BigNumber]>;

    calculateDiscountRate(
      debtBalance: BigNumberish,
      discountTokenBalance: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>;
  };

  DISCOUNT_RATE(overrides?: CallOverrides): Promise<BigNumber>;

  DISCOUNT_TOKEN(overrides?: CallOverrides): Promise<string>;

  GHO_DISCOUNTED_PER_DISCOUNT_TOKEN(
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  MIN_DEBT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<BigNumber>;

  MIN_DISCOUNT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<BigNumber>;

  calculateDiscountRate(
    debtBalance: BigNumberish,
    discountTokenBalance: BigNumberish,
    overrides?: CallOverrides,
  ): Promise<BigNumber>;

  callStatic: {
    DISCOUNT_RATE(overrides?: CallOverrides): Promise<BigNumber>;

    DISCOUNT_TOKEN(overrides?: CallOverrides): Promise<string>;

    GHO_DISCOUNTED_PER_DISCOUNT_TOKEN(
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    MIN_DEBT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_DISCOUNT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<BigNumber>;

    calculateDiscountRate(
      debtBalance: BigNumberish,
      discountTokenBalance: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    DISCOUNT_RATE(overrides?: CallOverrides): Promise<BigNumber>;

    DISCOUNT_TOKEN(overrides?: CallOverrides): Promise<BigNumber>;

    GHO_DISCOUNTED_PER_DISCOUNT_TOKEN(
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    MIN_DEBT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_DISCOUNT_TOKEN_BALANCE(overrides?: CallOverrides): Promise<BigNumber>;

    calculateDiscountRate(
      debtBalance: BigNumberish,
      discountTokenBalance: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DISCOUNT_RATE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    DISCOUNT_TOKEN(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    GHO_DISCOUNTED_PER_DISCOUNT_TOKEN(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    MIN_DEBT_TOKEN_BALANCE(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    MIN_DISCOUNT_TOKEN_BALANCE(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    calculateDiscountRate(
      debtBalance: BigNumberish,
      discountTokenBalance: BigNumberish,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
