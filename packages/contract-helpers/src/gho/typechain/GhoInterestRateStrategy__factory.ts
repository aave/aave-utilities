/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GhoInterestRateStrategy,
  GhoInterestRateStrategyInterface,
} from "./GhoInterestRateStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "variableBorrowRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "unbacked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityAdded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityTaken",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalStableDebt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVariableDebt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageStableBorrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactor",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "reserve",
            type: "address",
          },
          {
            internalType: "address",
            name: "aToken",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.CalculateInterestRatesParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "calculateInterestRates",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseVariableBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxVariableBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161027b38038061027b83398101604081905261002f91610037565b608052610050565b60006020828403121561004957600080fd5b5051919050565b60805161020b61007060003960008181604b01526099015261020b6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806334762ca51461004657806380031e3714610046578063a589870914610079575b600080fd5b6040517f000000000000000000000000000000000000000000000000000000000000000081526020015b60405180910390f35b6100bb610087366004610150565b506a084595161401484a0000009081907f000000000000000000000000000000000000000000000000000000000000000090565b60408051938452602084019290925290820152606001610070565b604051610120810167ffffffffffffffff81118282101715610121577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461014b57600080fd5b919050565b6000610120828403121561016357600080fd5b61016b6100d6565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201526101b760e08401610127565b60e08201526101006101ca818501610127565b90820152939250505056fea26469706673582212208bcb84e6ce793773ef835295e6a298ec6cd0a6441de636737cca46caa742bdd964736f6c634300080a0033";

type GhoInterestRateStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GhoInterestRateStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GhoInterestRateStrategy__factory extends ContractFactory {
  constructor(...args: GhoInterestRateStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    variableBorrowRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GhoInterestRateStrategy> {
    return super.deploy(
      variableBorrowRate,
      overrides || {}
    ) as Promise<GhoInterestRateStrategy>;
  }
  override getDeployTransaction(
    variableBorrowRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(variableBorrowRate, overrides || {});
  }
  override attach(address: string): GhoInterestRateStrategy {
    return super.attach(address) as GhoInterestRateStrategy;
  }
  override connect(signer: Signer): GhoInterestRateStrategy__factory {
    return super.connect(signer) as GhoInterestRateStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GhoInterestRateStrategyInterface {
    return new utils.Interface(_abi) as GhoInterestRateStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GhoInterestRateStrategy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GhoInterestRateStrategy;
  }
}
