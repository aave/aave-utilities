/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  UmbrellaBatchHelper,
  UmbrellaBatchHelperInterface,
} from './UmbrellaBatchHelper';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: 'rewardsController',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'owner',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'REWARDS_CONTROLLER',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IRewardsController',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'claimRewardsPermit',
    inputs: [
      {
        name: 'p',
        type: 'tuple',
        internalType: 'struct IUmbrellaBatchHelper.ClaimPermit',
        components: [
          {
            name: 'stakeToken',
            type: 'address',
            internalType: 'contract IStakeToken',
          },
          {
            name: 'rewards',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'v',
            type: 'uint8',
            internalType: 'uint8',
          },
          {
            name: 'r',
            type: 'bytes32',
            internalType: 'bytes32',
          },
          {
            name: 's',
            type: 'bytes32',
            internalType: 'bytes32',
          },
          {
            name: 'restake',
            type: 'bool',
            internalType: 'bool',
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'cooldownPermit',
    inputs: [
      {
        name: 'p',
        type: 'tuple',
        internalType: 'struct IUmbrellaBatchHelper.CooldownPermit',
        components: [
          {
            name: 'stakeToken',
            type: 'address',
            internalType: 'contract IStakeToken',
          },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'v',
            type: 'uint8',
            internalType: 'uint8',
          },
          {
            name: 'r',
            type: 'bytes32',
            internalType: 'bytes32',
          },
          {
            name: 's',
            type: 'bytes32',
            internalType: 'bytes32',
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'deposit',
    inputs: [
      {
        name: 'io',
        type: 'tuple',
        internalType: 'struct IUmbrellaBatchHelper.IOData',
        components: [
          {
            name: 'stakeToken',
            type: 'address',
            internalType: 'contract IStakeToken',
          },
          {
            name: 'edgeToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'value',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'emergencyEtherTransfer',
    inputs: [
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'emergencyTokenTransfer',
    inputs: [
      {
        name: 'erc20Token',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'initializePath',
    inputs: [
      {
        name: 'stakeTokens',
        type: 'address[]',
        internalType: 'contract IStakeToken[]',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'maxRescue',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'multicall',
    inputs: [
      {
        name: 'data',
        type: 'bytes[]',
        internalType: 'bytes[]',
      },
    ],
    outputs: [
      {
        name: 'results',
        type: 'bytes[]',
        internalType: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'owner',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'pause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'paused',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'permit',
    inputs: [
      {
        name: 'p',
        type: 'tuple',
        internalType: 'struct IUmbrellaBatchHelper.Permit',
        components: [
          {
            name: 'token',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'value',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'deadline',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'v',
            type: 'uint8',
            internalType: 'uint8',
          },
          {
            name: 'r',
            type: 'bytes32',
            internalType: 'bytes32',
          },
          {
            name: 's',
            type: 'bytes32',
            internalType: 'bytes32',
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'redeem',
    inputs: [
      {
        name: 'io',
        type: 'tuple',
        internalType: 'struct IUmbrellaBatchHelper.IOData',
        components: [
          {
            name: 'stakeToken',
            type: 'address',
            internalType: 'contract IStakeToken',
          },
          {
            name: 'edgeToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'value',
            type: 'uint256',
            internalType: 'uint256',
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'renounceOwnership',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'transferOwnership',
    inputs: [
      {
        name: 'newOwner',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'unpause',
    inputs: [],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'whoCanRescue',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'AssetPathInitialized',
    inputs: [
      {
        name: 'stakeToken',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'ERC20Rescued',
    inputs: [
      {
        name: 'caller',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'token',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'NativeTokensRescued',
    inputs: [
      {
        name: 'caller',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'to',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'amount',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      {
        name: 'previousOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'newOwner',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Paused',
    inputs: [
      {
        name: 'account',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'Unpaused',
    inputs: [
      {
        name: 'account',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'AddressEmptyCode',
    inputs: [
      {
        name: 'target',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'EnforcedPause',
    inputs: [],
  },
  {
    type: 'error',
    name: 'EthTransferFailed',
    inputs: [],
  },
  {
    type: 'error',
    name: 'ExpectedPause',
    inputs: [],
  },
  {
    type: 'error',
    name: 'FailedCall',
    inputs: [],
  },
  {
    type: 'error',
    name: 'InvalidEdgeToken',
    inputs: [],
  },
  {
    type: 'error',
    name: 'NotInitializedStake',
    inputs: [],
  },
  {
    type: 'error',
    name: 'OnlyRescueGuardian',
    inputs: [],
  },
  {
    type: 'error',
    name: 'OwnableInvalidOwner',
    inputs: [
      {
        name: 'owner',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'OwnableUnauthorizedAccount',
    inputs: [
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'SafeERC20FailedOperation',
    inputs: [
      {
        name: 'token',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'ZeroAddress',
    inputs: [],
  },
  {
    type: 'error',
    name: 'ZeroAmount',
    inputs: [],
  },
] as const;

const _bytecode =
  '0x60a060405234801561000f575f5ffd5b50604051613b47380380613b47833981810160405281019061003191906102c3565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610310565b60405180910390fd5b6100b1816101a460201b60201c565b505f5f60146101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561013357505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b610169576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610329565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61029282610269565b9050919050565b6102a281610288565b81146102ac575f5ffd5b50565b5f815190506102bd81610299565b92915050565b5f5f604083850312156102d9576102d8610265565b5b5f6102e6858286016102af565b92505060206102f7858286016102af565b9150509250929050565b61030a81610288565b82525050565b5f6020820190506103235f830184610301565b92915050565b6080516137f861034f5f395f818161127601528181611455015261211f01526137f85ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c8063a4757b0f116100a0578063c531de401161006f578063c531de4014610268578063cd086d4514610284578063d7408715146102a2578063eed88b8d146102d2578063f2fde38b146102ee57610114565b8063a4757b0f146101e2578063a5fbb68014610200578063ac9650d81461021c578063ad89eb1e1461024c57610114565b80635c975abb116100e75780635c975abb14610176578063715018a6146101945780638456cb591461019e5780638da5cb5b146101a8578063a3d5b255146101c657610114565b80630f198b301461011857806338957dd9146101345780633f4ba83a1461015057806351d3bf6d1461015a575b5f5ffd5b610132600480360381019061012d919061282f565b61030a565b005b61014e6004803603810190610149919061282f565b610792565b005b6101586109c0565b005b610174600480360381019061016f9190612878565b6109d2565b005b61017e610a9a565b60405161018b91906128bd565b60405180910390f35b61019c610aaf565b005b6101a6610ac2565b005b6101b0610ad4565b6040516101bd9190612915565b60405180910390f35b6101e060048036038101906101db919061298b565b610afb565b005b6101ea610b77565b6040516101f79190612915565b60405180910390f35b61021a600480360381019061021591906129f9565b610b85565b005b61023660048036038101906102319190612aa1565b610f93565b6040516102439190612c31565b60405180910390f35b61026660048036038101906102619190612ca6565b611174565b005b610282600480360381019061027d9190612d0f565b6111c1565b005b61028c611274565b6040516102999190612d95565b60405180910390f35b6102bc60048036038101906102b79190612dae565b611298565b6040516102c99190612de8565b60405180910390f35b6102ec60048036038101906102e79190612e01565b6112c1565b005b61030860048036038101906103039190612dae565b61133b565b005b6103126113bf565b5f81604001350361034f576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610369815f0160208101906103649190612e7a565b611400565b5f60015f835f01602081019061037f9190612e7a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f016040518060600160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090505f826001015f85602001602081019061046c9190612dae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1690505f60038111156104c7576104c6612ea5565b5b8160038111156104da576104d9612ea5565b5b03610511576040517fbc0bf40100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f846040013590506002600381111561052d5761052c612ea5565b5b8260038111156105405761053f612ea5565b5b03610714575f5f86602001602081019061055a9190612dae565b73ffffffffffffffffffffffffffffffffffffffff166370a0823161057d61191a565b6040518263ffffffff1660e01b81526004016105999190612915565b602060405180830381865afa1580156105b4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d89190612ee6565b90505f8103610613576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808760400135111561062757600191508092505b61066d61063261191a565b30858a60200160208101906106479190612dae565b73ffffffffffffffffffffffffffffffffffffffff16611921909392919063ffffffff16565b8161070d575f8760200160208101906106869190612dae565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106be9190612915565b602060405180830381865afa1580156106d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fd9190612ee6565b90508084111561070b578093505b505b505061075b565b61075a61071f61191a565b30838860200160208101906107349190612dae565b73ffffffffffffffffffffffffffffffffffffffff16611921909392919063ffffffff16565b5b61078b855f0160208101906107709190612e7a565b8660200160208101906107839190612dae565b8386866119a3565b5050505050565b61079a6113bf565b5f8160400135036107d7576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f1815f0160208101906107ec9190612e7a565b611400565b5f60015f835f0160208101906108079190612e7a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f016040518060600160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090505f826001015f8560200160208101906108f49190612dae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1690505f600381111561094f5761094e612ea5565b5b81600381111561096257610961612ea5565b5b03610999576040517fbc0bf40100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109ba845f0160208101906109ae9190612e7a565b85604001358484611bd2565b50505050565b6109c8611e46565b6109d0611ecd565b565b6109da6113bf565b805f0160208101906109ec9190612e7a565b73ffffffffffffffffffffffffffffffffffffffff1663fae9fed0610a0f61191a565b83602001356040518060600160405280866040016020810190610a329190612f47565b60ff1681526020018660600135815260200186608001358152506040518463ffffffff1660e01b8152600401610a6a93929190612fd9565b5f604051808303815f87803b158015610a81575f5ffd5b505af1158015610a93573d5f5f3e3d5ffd5b5050505050565b5f5f60149054906101000a900460ff16905090565b610ab7611e46565b610ac05f611f2e565b565b610aca611e46565b610ad2611fef565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b03610b77565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b67576040517f3a02626900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b72838383612051565b505050565b5f610b80610ad4565b905090565b610b8d6113bf565b610ba7815f016020810190610ba29190612e7a565b611400565b5f610bb18261211b565b90508160c0016020810190610bc69190613038565b610bd05750610f90565b5f60015f845f016020810190610be69190612e7a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f016040518060600160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff161515151581526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090505f5b8351811015610f8b575f848281518110610cd957610cd8613063565b5b60200260200101510315610f80575f836001015f878060200190610cfd919061309c565b85818110610d0e57610d0d613063565b5b9050602002016020810190610d239190612dae565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1690505f868060200190610d7c919061309c565b84818110610d8d57610d8c613063565b5b9050602002016020810190610da29190612dae565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610dda9190612915565b602060405180830381865afa158015610df5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e199190612ee6565b9050858381518110610e2e57610e2d613063565b5b6020026020010151811015610e5e5780868481518110610e5157610e50613063565b5b6020026020010181815250505b5f6003811115610e7157610e70612ea5565b5b826003811115610e8457610e83612ea5565b5b03610f0f57610f0a610e9461191a565b878581518110610ea757610ea6613063565b5b6020026020010151898060200190610ebf919061309c565b87818110610ed057610ecf613063565b5b9050602002016020810190610ee59190612dae565b73ffffffffffffffffffffffffffffffffffffffff166122529092919063ffffffff16565b610f7d565b610f7c875f016020810190610f249190612e7a565b888060200190610f34919061309c565b86818110610f4557610f44613063565b5b9050602002016020810190610f5a9190612dae565b888681518110610f6d57610f6c613063565b5b602002602001015187866119a3565b5b50505b806001019050610cbc565b505050505b50565b60605f610f9e61191a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461103e575f36610fda6122d1565b5f369050610fe8919061312b565b908092610ff793929190613166565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505061108c565b5f67ffffffffffffffff811115611058576110576131a0565b5b6040519080825280601f01601f19166020018201604052801561108a5781602001600182028036833780820191505090505b505b90508383905067ffffffffffffffff8111156110ab576110aa6131a0565b5b6040519080825280602002602001820160405280156110de57816020015b60608152602001906001900390816110c95790505b5091505f5f90505b8484905081101561116c576111413086868481811061110857611107613063565b5b905060200281019061111a91906131cd565b8560405160200161112d9392919061329b565b6040516020818303038152906040526122d8565b83828151811061115457611153613063565b5b602002602001018190525080806001019150506110e6565b505092915050565b5f5b828290508110156111bc576111b183838381811061119757611196613063565b5b90506020020160208101906111ac9190612e7a565b611400565b806001019050611176565b505050565b6111c96113bf565b805f0160208101906111db9190612dae565b73ffffffffffffffffffffffffffffffffffffffff1663d505accf6111fe61191a565b308460200135856040013586606001602081019061121c9190612f47565b87608001358860a001356040518863ffffffff1660e01b815260040161124897969594939291906132de565b5f604051808303815f87803b15801561125f575f5ffd5b505af1925050508015611270575060015b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b6112c9610b77565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461132d576040517f3a02626900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113378282612358565b5050565b611343611e46565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113b3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113aa9190612915565b60405180910390fd5b6113bc81611f2e565b50565b6113c7610a9a565b156113fe576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f015f9054906101000a900460ff16611917575f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631652e7b7836040518263ffffffff1660e01b81526004016114ac9190612915565b6040805180830381865afa1580156114c6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114ea91906133e7565b5f015103611524576040517f926fe7ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f8273ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ae573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115d29190613426565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663a0c1f15e6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561163d57506040513d601f19601f8201168201806040525081019061163a9190613426565b60015b61164957819050611788565b6001846001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360038111156116ab576116aa612ea5565b5b02179055506002846001015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083600381111561171257611711612ea5565b5b02179055508273ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611760573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117849190613426565b9150505b6003836001015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908360038111156117ea576117e9612ea5565b5b021790555060405180606001604052806001151581526020018273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415151581526020018373ffffffffffffffffffffffffffffffffffffffff16815250835f015f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff0219169083151502179055506040820151815f0160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507fa51d0c2ac6e3d6ddd29a3a38436525dd8e7a10da347d2d4a9f2148d9e3bfbe1c8460405161190b9190612915565b60405180910390a15050505b50565b5f33905090565b61199d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161195693929190613451565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506124af565b50505050565b6119b181836020015161254a565b15611b19576119e58260400151848673ffffffffffffffffffffffffffffffffffffffff166125859092919063ffffffff16565b6003808111156119f8576119f7612ea5565b5b816003811115611a0b57611a0a612ea5565b5b03611a9657816040015173ffffffffffffffffffffffffffffffffffffffff16636e553f6584306040518363ffffffff1660e01b8152600401611a4f929190613486565b6020604051808303815f875af1158015611a6b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a8f9190612ee6565b9250611b18565b816040015173ffffffffffffffffffffffffffffffffffffffff1663e25ec34984306040518363ffffffff1660e01b8152600401611ad5929190613486565b6020604051808303815f875af1158015611af1573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b159190612ee6565b92505b5b611b488584846040015173ffffffffffffffffffffffffffffffffffffffff166125859092919063ffffffff16565b8473ffffffffffffffffffffffffffffffffffffffff16636e553f6584611b6d61191a565b6040518363ffffffff1660e01b8152600401611b8a929190613486565b6020604051808303815f875af1158015611ba6573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611bca9190612ee6565b505050505050565b611be081836020015161254a565b15611db3578373ffffffffffffffffffffffffffffffffffffffff1663ba0876528430611c0b61191a565b6040518463ffffffff1660e01b8152600401611c29939291906134ad565b6020604051808303815f875af1158015611c45573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c699190612ee6565b9250600380811115611c7e57611c7d612ea5565b5b816003811115611c9157611c90612ea5565b5b03611d2457816040015173ffffffffffffffffffffffffffffffffffffffff1663ba08765284611cbf61191a565b306040518463ffffffff1660e01b8152600401611cde939291906134ad565b6020604051808303815f875af1158015611cfa573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d1e9190612ee6565b50611dae565b816040015173ffffffffffffffffffffffffffffffffffffffff1663090edf9a84611d4d61191a565b306040518463ffffffff1660e01b8152600401611d6c939291906134ad565b6020604051808303815f875af1158015611d88573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dac9190612ee6565b505b611e40565b8373ffffffffffffffffffffffffffffffffffffffff1663ba08765284611dd861191a565b611de061191a565b6040518463ffffffff1660e01b8152600401611dfe939291906134ad565b6020604051808303815f875af1158015611e1a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e3e9190612ee6565b505b50505050565b611e4e61191a565b73ffffffffffffffffffffffffffffffffffffffff16611e6c610ad4565b73ffffffffffffffffffffffffffffffffffffffff1614611ecb57611e8f61191a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611ec29190612915565b60405180910390fd5b565b611ed5612692565b5f5f60146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611f1761191a565b604051611f249190612915565b60405180910390a1565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ff76113bf565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861203a61191a565b6040516120479190612915565b60405180910390a1565b5f61205b84611298565b905081811161206a578061206c565b815b915061209983838673ffffffffffffffffffffffffffffffffffffffff166122529092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc7af665d489507e14ae25ac7ab0030fc7f570869610bdd32117ea56b60ae5c618560405161210d9190612de8565b60405180910390a450505050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d6976b40835f01602081019061216b9190612e7a565b84806020019061217b919061309c565b61218361191a565b8760c00160208101906121969190613038565b6121a7576121a261191a565b6121a9565b305b886040013560405180606001604052808b60600160208101906121cc9190612f47565b60ff1681526020018b6080013581526020018b60a001358152506040518863ffffffff1660e01b815260040161220897969594939291906135de565b5f604051808303815f875af1158015612223573d5f5f3e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061224b9190613707565b9050919050565b6122cc838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161228592919061374e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506124af565b505050565b5f5f905090565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516123019190613775565b5f60405180830381855af49150503d805f8114612339576040519150601f19603f3d011682016040523d82523d5f602084013e61233e565b606091505b509150915061234e8583836126d2565b9250505092915050565b5f8273ffffffffffffffffffffffffffffffffffffffff16825f67ffffffffffffffff81111561238b5761238a6131a0565b5b6040519080825280601f01601f1916602001820160405280156123bd5781602001600182028036833780820191505090505b506040516123cb9190613775565b5f6040518083038185875af1925050503d805f8114612405576040519150601f19603f3d011682016040523d82523d5f602084013e61240a565b606091505b5050905080612445576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fb7c602059992183c7b767c08204223afc99f1895fd175adf9ece23ce9f5bb8b7846040516124a29190612de8565b60405180910390a3505050565b5f5f60205f8451602086015f885af1806124ce576040513d5f823e3d81fd5b3d92505f519150505f82146124e7576001811415612502565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561254457836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161253b9190612915565b60405180910390fd5b50505050565b5f6001600381111561255f5761255e612ea5565b5b83600381111561257257612571612ea5565b5b1415801561257d5750815b905092915050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663095ea7b384846040516024016125b592919061374e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050612603848261275f565b61268c57612681848573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3865f60405160240161263a9291906137c4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506124af565b61268b84826124af565b5b50505050565b61269a610a9a565b6126d0576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826126e7576126e2826127b8565b612757565b5f825114801561270d57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561274f57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016127469190612915565b60405180910390fd5b819050612758565b5b9392505050565b5f5f5f5f60205f8651602088015f8a5af192503d91505f5190508280156127ad57505f821461279157600181146127ac565b5f8673ffffffffffffffffffffffffffffffffffffffff163b115b5b935050505092915050565b5f815111156127ca5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f606082840312156128265761282561280d565b5b81905092915050565b5f6060828403121561284457612843612805565b5b5f61285184828501612811565b91505092915050565b5f60a0828403121561286f5761286e61280d565b5b81905092915050565b5f60a0828403121561288d5761288c612805565b5b5f61289a8482850161285a565b91505092915050565b5f8115159050919050565b6128b7816128a3565b82525050565b5f6020820190506128d05f8301846128ae565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6128ff826128d6565b9050919050565b61290f816128f5565b82525050565b5f6020820190506129285f830184612906565b92915050565b612937816128f5565b8114612941575f5ffd5b50565b5f813590506129528161292e565b92915050565b5f819050919050565b61296a81612958565b8114612974575f5ffd5b50565b5f8135905061298581612961565b92915050565b5f5f5f606084860312156129a2576129a1612805565b5b5f6129af86828701612944565b93505060206129c086828701612944565b92505060406129d186828701612977565b9150509250925092565b5f60e082840312156129f0576129ef61280d565b5b81905092915050565b5f60208284031215612a0e57612a0d612805565b5b5f82013567ffffffffffffffff811115612a2b57612a2a612809565b5b612a37848285016129db565b91505092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112612a6157612a60612a40565b5b8235905067ffffffffffffffff811115612a7e57612a7d612a44565b5b602083019150836020820283011115612a9a57612a99612a48565b5b9250929050565b5f5f60208385031215612ab757612ab6612805565b5b5f83013567ffffffffffffffff811115612ad457612ad3612809565b5b612ae085828601612a4c565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612b4c578082015181840152602081019050612b31565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612b7182612b15565b612b7b8185612b1f565b9350612b8b818560208601612b2f565b612b9481612b57565b840191505092915050565b5f612baa8383612b67565b905092915050565b5f602082019050919050565b5f612bc882612aec565b612bd28185612af6565b935083602082028501612be485612b06565b805f5b85811015612c1f5784840389528151612c008582612b9f565b9450612c0b83612bb2565b925060208a01995050600181019050612be7565b50829750879550505050505092915050565b5f6020820190508181035f830152612c498184612bbe565b905092915050565b5f5f83601f840112612c6657612c65612a40565b5b8235905067ffffffffffffffff811115612c8357612c82612a44565b5b602083019150836020820283011115612c9f57612c9e612a48565b5b9250929050565b5f5f60208385031215612cbc57612cbb612805565b5b5f83013567ffffffffffffffff811115612cd957612cd8612809565b5b612ce585828601612c51565b92509250509250929050565b5f60c08284031215612d0657612d0561280d565b5b81905092915050565b5f60c08284031215612d2457612d23612805565b5b5f612d3184828501612cf1565b91505092915050565b5f819050919050565b5f612d5d612d58612d53846128d6565b612d3a565b6128d6565b9050919050565b5f612d6e82612d43565b9050919050565b5f612d7f82612d64565b9050919050565b612d8f81612d75565b82525050565b5f602082019050612da85f830184612d86565b92915050565b5f60208284031215612dc357612dc2612805565b5b5f612dd084828501612944565b91505092915050565b612de281612958565b82525050565b5f602082019050612dfb5f830184612dd9565b92915050565b5f5f60408385031215612e1757612e16612805565b5b5f612e2485828601612944565b9250506020612e3585828601612977565b9150509250929050565b5f612e49826128f5565b9050919050565b612e5981612e3f565b8114612e63575f5ffd5b50565b5f81359050612e7481612e50565b92915050565b5f60208284031215612e8f57612e8e612805565b5b5f612e9c84828501612e66565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f81519050612ee081612961565b92915050565b5f60208284031215612efb57612efa612805565b5b5f612f0884828501612ed2565b91505092915050565b5f60ff82169050919050565b612f2681612f11565b8114612f30575f5ffd5b50565b5f81359050612f4181612f1d565b92915050565b5f60208284031215612f5c57612f5b612805565b5b5f612f6984828501612f33565b91505092915050565b612f7b81612f11565b82525050565b5f819050919050565b612f9381612f81565b82525050565b606082015f820151612fad5f850182612f72565b506020820151612fc06020850182612f8a565b506040820151612fd36040850182612f8a565b50505050565b5f60a082019050612fec5f830186612906565b612ff96020830185612dd9565b6130066040830184612f99565b949350505050565b613017816128a3565b8114613021575f5ffd5b50565b5f813590506130328161300e565b92915050565b5f6020828403121561304d5761304c612805565b5b5f61305a84828501613024565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f833560016020038436030381126130b8576130b7613090565b5b80840192508235915067ffffffffffffffff8211156130da576130d9613094565b5b6020830192506020820236038313156130f6576130f5613098565b5b509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61313582612958565b915061314083612958565b9250828203905081811115613158576131576130fe565b5b92915050565b5f5ffd5b5f5ffd5b5f5f858511156131795761317861315e565b5b8386111561318a57613189613162565b5b6001850283019150848603905094509492505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f5f833560016020038436030381126131e9576131e8613090565b5b80840192508235915067ffffffffffffffff82111561320b5761320a613094565b5b60208301925060018202360383131561322757613226613098565b5b509250929050565b5f81905092915050565b828183375f83830152505050565b5f613252838561322f565b935061325f838584613239565b82840190509392505050565b5f61327582612b15565b61327f818561322f565b935061328f818560208601612b2f565b80840191505092915050565b5f6132a7828587613247565b91506132b3828461326b565b9150819050949350505050565b6132c981612f11565b82525050565b6132d881612f81565b82525050565b5f60e0820190506132f15f83018a612906565b6132fe6020830189612906565b61330b6040830188612dd9565b6133186060830187612dd9565b61332560808301866132c0565b61333260a08301856132cf565b61333f60c08301846132cf565b98975050505050505050565b5f5ffd5b61335882612b57565b810181811067ffffffffffffffff82111715613377576133766131a0565b5b80604052505050565b5f6133896127fc565b9050613395828261334f565b919050565b5f604082840312156133af576133ae61334b565b5b6133b96040613380565b90505f6133c884828501612ed2565b5f8301525060206133db84828501612ed2565b60208301525092915050565b5f604082840312156133fc576133fb612805565b5b5f6134098482850161339a565b91505092915050565b5f815190506134208161292e565b92915050565b5f6020828403121561343b5761343a612805565b5b5f61344884828501613412565b91505092915050565b5f6060820190506134645f830186612906565b6134716020830185612906565b61347e6040830184612dd9565b949350505050565b5f6040820190506134995f830185612dd9565b6134a66020830184612906565b9392505050565b5f6060820190506134c05f830186612dd9565b6134cd6020830185612906565b6134da6040830184612906565b949350505050565b5f82825260208201905092915050565b5f819050919050565b613504816128f5565b82525050565b5f61351583836134fb565b60208301905092915050565b5f61352f6020840184612944565b905092915050565b5f602082019050919050565b5f61354e83856134e2565b9350613559826134f2565b805f5b858110156135915761356e8284613521565b613578888261350a565b975061358383613537565b92505060018101905061355c565b5085925050509392505050565b606082015f8201516135b25f850182612f72565b5060208201516135c56020850182612f8a565b5060408201516135d86040850182612f8a565b50505050565b5f610100820190506135f25f83018a612906565b818103602083015261360581888a613543565b90506136146040830187612906565b6136216060830186612906565b61362e6080830185612dd9565b61363b60a083018461359e565b98975050505050505050565b5f67ffffffffffffffff821115613661576136606131a0565b5b602082029050602081019050919050565b5f61368461367f84613647565b613380565b905080838252602082019050602084028301858111156136a7576136a6612a48565b5b835b818110156136d057806136bc8882612ed2565b8452602084019350506020810190506136a9565b5050509392505050565b5f82601f8301126136ee576136ed612a40565b5b81516136fe848260208601613672565b91505092915050565b5f6020828403121561371c5761371b612805565b5b5f82015167ffffffffffffffff81111561373957613738612809565b5b613745848285016136da565b91505092915050565b5f6040820190506137615f830185612906565b61376e6020830184612dd9565b9392505050565b5f613780828461326b565b915081905092915050565b5f819050919050565b5f6137ae6137a96137a48461378b565b612d3a565b612958565b9050919050565b6137be81613794565b82525050565b5f6040820190506137d75f830185612906565b6137e460208301846137b5565b939250505056fea164736f6c634300081b000a';

type UmbrellaBatchHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UmbrellaBatchHelperConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UmbrellaBatchHelper__factory extends ContractFactory {
  constructor(...args: UmbrellaBatchHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rewardsController: string,
    owner: string,
    overrides?: Overrides & { from?: string },
  ): Promise<UmbrellaBatchHelper> {
    return super.deploy(
      rewardsController,
      owner,
      overrides || {},
    ) as Promise<UmbrellaBatchHelper>;
  }
  override getDeployTransaction(
    rewardsController: string,
    owner: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      rewardsController,
      owner,
      overrides || {},
    );
  }
  override attach(address: string): UmbrellaBatchHelper {
    return super.attach(address) as UmbrellaBatchHelper;
  }
  override connect(signer: Signer): UmbrellaBatchHelper__factory {
    return super.connect(signer) as UmbrellaBatchHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UmbrellaBatchHelperInterface {
    return new utils.Interface(_abi) as UmbrellaBatchHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): UmbrellaBatchHelper {
    return new Contract(address, _abi, signerOrProvider) as UmbrellaBatchHelper;
  }
}
