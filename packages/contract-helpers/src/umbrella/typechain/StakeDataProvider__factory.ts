/* Autogenerated file. Do not edit manually. */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  StakeDataProvider,
  StakeDataProviderInterface,
} from './StakeDataProvider';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_umbrella',
        type: 'address',
        internalType: 'contract IUmbrellaStkManager',
      },
      {
        name: '_rewardsController',
        type: 'address',
        internalType: 'contract IRewardsController',
      },
      {
        name: '_stataTokenFactory',
        type: 'address',
        internalType: 'contract IStataTokenFactory',
      },
      {
        name: '_aaveOracle',
        type: 'address',
        internalType: 'contract IAaveOracle',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'aaveOracle',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IAaveOracle',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getStakeData',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'tuple[]',
        internalType: 'struct StakeData[]',
        components: [
          {
            name: 'tokenAddress',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'name',
            type: 'string',
            internalType: 'string',
          },
          {
            name: 'symbol',
            type: 'string',
            internalType: 'string',
          },
          {
            name: 'price',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'totalSupply',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'underlyingTokenAddress',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'underlyingTokenName',
            type: 'string',
            internalType: 'string',
          },
          {
            name: 'underlyingTokenSymbol',
            type: 'string',
            internalType: 'string',
          },
          {
            name: 'underlyingTokenDecimals',
            type: 'uint8',
            internalType: 'uint8',
          },
          {
            name: 'cooldownSeconds',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'unstakeWindowSeconds',
            type: 'uint256',
            internalType: 'uint256',
          },
          {
            name: 'underlyingIsStataToken',
            type: 'bool',
            internalType: 'bool',
          },
          {
            name: 'stataTokenData',
            type: 'tuple',
            internalType: 'struct StataTokenData',
            components: [
              {
                name: 'asset',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'assetName',
                type: 'string',
                internalType: 'string',
              },
              {
                name: 'assetSymbol',
                type: 'string',
                internalType: 'string',
              },
              {
                name: 'aToken',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'aTokenName',
                type: 'string',
                internalType: 'string',
              },
              {
                name: 'aTokenSymbol',
                type: 'string',
                internalType: 'string',
              },
            ],
          },
          {
            name: 'rewards',
            type: 'tuple[]',
            internalType: 'struct Reward[]',
            components: [
              {
                name: 'rewardAddress',
                type: 'address',
                internalType: 'address',
              },
              {
                name: 'rewardName',
                type: 'string',
                internalType: 'string',
              },
              {
                name: 'rewardSymbol',
                type: 'string',
                internalType: 'string',
              },
              {
                name: 'price',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'decimals',
                type: 'uint8',
                internalType: 'uint8',
              },
              {
                name: 'index',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'maxEmissionPerSecond',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'distributionEnd',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'currentEmissionPerSecond',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'apy',
                type: 'uint256',
                internalType: 'uint256',
              },
            ],
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getUserStakeData',
    inputs: [
      {
        name: 'user',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'tuple[]',
        internalType: 'struct StakeUserData[]',
        components: [
          {
            name: 'stakeToken',
            type: 'address',
            internalType: 'address',
          },
          {
            name: 'stakeTokenName',
            type: 'string',
            internalType: 'string',
          },
          {
            name: 'balances',
            type: 'tuple',
            internalType: 'struct StakeUserBalances',
            components: [
              {
                name: 'stakeTokenBalance',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'stakeTokenRedeemableAmount',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'underlyingTokenBalance',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'stataTokenAssetBalance',
                type: 'uint256',
                internalType: 'uint256',
              },
              {
                name: 'stataTokenATokenBalance',
                type: 'uint256',
                internalType: 'uint256',
              },
            ],
          },
          {
            name: 'cooldown',
            type: 'tuple',
            internalType: 'struct StakeUserCooldown',
            components: [
              {
                name: 'cooldownAmount',
                type: 'uint192',
                internalType: 'uint192',
              },
              {
                name: 'endOfCooldown',
                type: 'uint32',
                internalType: 'uint32',
              },
              {
                name: 'withdrawalWindow',
                type: 'uint32',
                internalType: 'uint32',
              },
            ],
          },
          {
            name: 'rewards',
            type: 'address[]',
            internalType: 'address[]',
          },
          {
            name: 'rewardsAccrued',
            type: 'uint256[]',
            internalType: 'uint256[]',
          },
        ],
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'rewardsController',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IRewardsController',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'stataTokenFactory',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IStataTokenFactory',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'umbrella',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract IUmbrellaStkManager',
      },
    ],
    stateMutability: 'view',
  },
] as const;

const _bytecode =
  '';

type StakeDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeDataProviderConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakeDataProvider__factory extends ContractFactory {
  constructor(...args: StakeDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _umbrella: string,
    _rewardsController: string,
    _stataTokenFactory: string,
    _aaveOracle: string,
    overrides?: Overrides & { from?: string },
  ): Promise<StakeDataProvider> {
    return super.deploy(
      _umbrella,
      _rewardsController,
      _stataTokenFactory,
      _aaveOracle,
      overrides || {},
    ) as Promise<StakeDataProvider>;
  }
  override getDeployTransaction(
    _umbrella: string,
    _rewardsController: string,
    _stataTokenFactory: string,
    _aaveOracle: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _umbrella,
      _rewardsController,
      _stataTokenFactory,
      _aaveOracle,
      overrides || {},
    );
  }
  override attach(address: string): StakeDataProvider {
    return super.attach(address) as StakeDataProvider;
  }
  override connect(signer: Signer): StakeDataProvider__factory {
    return super.connect(signer) as StakeDataProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeDataProviderInterface {
    return new utils.Interface(_abi) as StakeDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): StakeDataProvider {
    return new Contract(address, _abi, signerOrProvider) as StakeDataProvider;
  }
}
