/* Autogenerated file. Do not edit manually. */
/* eslint-disable */

import { Contract, Signer } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { IERC20FaucetOwnable } from './IERC20FaucetOwnable';

const _abi = [
  {
    inputs: [],
    name: 'isPermissioned',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'value',
        type: 'bool',
      },
    ],
    name: 'setPermissioned',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IERC20FaucetOwnable__factory {
  static readonly abi = _abi;

  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IERC20FaucetOwnable {
    return new Contract(address, _abi, signerOrProvider) as IERC20FaucetOwnable;
  }
}
