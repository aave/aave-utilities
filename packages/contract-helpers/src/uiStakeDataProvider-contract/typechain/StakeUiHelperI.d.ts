/* Autogenerated file. Do not edit manually. */
/* eslint-disable */

import { FunctionFragment, Result } from '@ethersproject/abi';
import { BytesLike } from '@ethersproject/bytes';
import { CallOverrides, Contract } from '@ethersproject/contracts';
import { Listener, Provider } from '@ethersproject/providers';
import {
  BigNumber,
  ethers,
  EventFilter,
  PopulatedTransaction,
  Signer,
} from 'ethers';

interface StakeUiHelperIInterface extends ethers.utils.Interface {
  functions: {
    'getGeneralStakeUIData()': FunctionFragment;
    'getStkAaveData(address)': FunctionFragment;
    'getStkBptData(address)': FunctionFragment;
    'getStkGeneralAaveData()': FunctionFragment;
    'getStkGeneralBptData()': FunctionFragment;
    'getStkUserAaveData(address)': FunctionFragment;
    'getStkUserBptData(address)': FunctionFragment;
    'getStkUsersAaveData(address[])': FunctionFragment;
    'getStkUsersBptData(address[])': FunctionFragment;
    'getUserStakeUIData(address)': FunctionFragment;
    'getUserUIData(address)': FunctionFragment;
    'getUsersStakeUIData(address[])': FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: 'getGeneralStakeUIData',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkAaveData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkBptData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkGeneralAaveData',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkGeneralBptData',
    values?: undefined,
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkUserAaveData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkUserBptData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkUsersAaveData',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getStkUsersBptData',
    values: [string[]],
  ): string;
  encodeFunctionData(
    functionFragment: 'getUserStakeUIData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getUserUIData',
    values: [string],
  ): string;
  encodeFunctionData(
    functionFragment: 'getUsersStakeUIData',
    values: [string[]],
  ): string;

  decodeFunctionResult(
    functionFragment: 'getGeneralStakeUIData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkAaveData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkBptData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkGeneralAaveData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkGeneralBptData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkUserAaveData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkUserBptData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkUsersAaveData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getStkUsersBptData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getUserStakeUIData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getUserUIData',
    data: BytesLike,
  ): Result;
  decodeFunctionResult(
    functionFragment: 'getUsersStakeUIData',
    data: BytesLike,
  ): Result;

  events: {};
}

export class StakeUiHelperI extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: StakeUiHelperIInterface;

  functions: {
    getGeneralStakeUIData(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      2: BigNumber;
    }>;

    'getGeneralStakeUIData()'(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      2: BigNumber;
    }>;

    getStkAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    getStkBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
    }>;

    getStkGeneralAaveData(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
    }>;

    'getStkGeneralAaveData()'(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
    }>;

    getStkGeneralBptData(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
    }>;

    'getStkGeneralBptData()'(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
    }>;

    getStkUserAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
    }>;

    'getStkUserAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
    }>;

    getStkUserBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
    }>;

    'getStkUserBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
    }>;

    getStkUsersAaveData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
    }>;

    'getStkUsersAaveData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
    }>;

    getStkUsersBptData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
    }>;

    'getStkUsersBptData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
    }>;

    getUserStakeUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      2: BigNumber;
    }>;

    'getUserStakeUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      2: BigNumber;
    }>;

    getUserUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;

    getUsersStakeUIData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      2: BigNumber;
    }>;

    'getUsersStakeUIData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      2: BigNumber;
    }>;
  };

  getGeneralStakeUIData(overrides?: CallOverrides): Promise<{
    0: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    };
    1: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    };
    2: BigNumber;
  }>;

  'getGeneralStakeUIData()'(overrides?: CallOverrides): Promise<{
    0: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    };
    1: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    };
    2: BigNumber;
  }>;

  getStkAaveData(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  'getStkAaveData(address)'(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  getStkBptData(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  'getStkBptData(address)'(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
    8: BigNumber;
    9: BigNumber;
    10: BigNumber;
    11: BigNumber;
    12: BigNumber;
  }>;

  getStkGeneralAaveData(overrides?: CallOverrides): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  'getStkGeneralAaveData()'(overrides?: CallOverrides): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  getStkGeneralBptData(overrides?: CallOverrides): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  'getStkGeneralBptData()'(overrides?: CallOverrides): Promise<{
    stakeTokenTotalSupply: BigNumber;
    stakeCooldownSeconds: BigNumber;
    stakeUnstakeWindow: BigNumber;
    stakeTokenPriceEth: BigNumber;
    rewardTokenPriceEth: BigNumber;
    stakeApy: BigNumber;
    distributionPerSecond: BigNumber;
    distributionEnd: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
    5: BigNumber;
    6: BigNumber;
    7: BigNumber;
  }>;

  getStkUserAaveData(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  'getStkUserAaveData(address)'(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  getStkUserBptData(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  'getStkUserBptData(address)'(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    stakeTokenUserBalance: BigNumber;
    underlyingTokenUserBalance: BigNumber;
    userCooldown: BigNumber;
    userIncentivesToClaim: BigNumber;
    userPermitNonce: BigNumber;
    0: BigNumber;
    1: BigNumber;
    2: BigNumber;
    3: BigNumber;
    4: BigNumber;
  }>;

  getStkUsersAaveData(
    user: string[],
    overrides?: CallOverrides,
  ): Promise<
    {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[]
  >;

  'getStkUsersAaveData(address[])'(
    user: string[],
    overrides?: CallOverrides,
  ): Promise<
    {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[]
  >;

  getStkUsersBptData(
    user: string[],
    overrides?: CallOverrides,
  ): Promise<
    {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[]
  >;

  'getStkUsersBptData(address[])'(
    user: string[],
    overrides?: CallOverrides,
  ): Promise<
    {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[]
  >;

  getUserStakeUIData(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    0: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    };
    1: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    };
    2: BigNumber;
  }>;

  'getUserStakeUIData(address)'(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    0: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    };
    1: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    };
    2: BigNumber;
  }>;

  getUserUIData(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    0: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    1: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    2: BigNumber;
  }>;

  'getUserUIData(address)'(
    user: string,
    overrides?: CallOverrides,
  ): Promise<{
    0: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    1: {
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    };
    2: BigNumber;
  }>;

  getUsersStakeUIData(
    user: string[],
    overrides?: CallOverrides,
  ): Promise<{
    0: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[];
    1: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[];
    2: BigNumber;
  }>;

  'getUsersStakeUIData(address[])'(
    user: string[],
    overrides?: CallOverrides,
  ): Promise<{
    0: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[];
    1: {
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }[];
    2: BigNumber;
  }>;

  callStatic: {
    getGeneralStakeUIData(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      2: BigNumber;
    }>;

    'getGeneralStakeUIData()'(overrides?: CallOverrides): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
      };
      2: BigNumber;
    }>;

    getStkAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    getStkBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
      8: BigNumber;
      9: BigNumber;
      10: BigNumber;
      11: BigNumber;
      12: BigNumber;
    }>;

    getStkGeneralAaveData(overrides?: CallOverrides): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    'getStkGeneralAaveData()'(overrides?: CallOverrides): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    getStkGeneralBptData(overrides?: CallOverrides): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    'getStkGeneralBptData()'(overrides?: CallOverrides): Promise<{
      stakeTokenTotalSupply: BigNumber;
      stakeCooldownSeconds: BigNumber;
      stakeUnstakeWindow: BigNumber;
      stakeTokenPriceEth: BigNumber;
      rewardTokenPriceEth: BigNumber;
      stakeApy: BigNumber;
      distributionPerSecond: BigNumber;
      distributionEnd: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
      5: BigNumber;
      6: BigNumber;
      7: BigNumber;
    }>;

    getStkUserAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    'getStkUserAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getStkUserBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    'getStkUserBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      stakeTokenUserBalance: BigNumber;
      underlyingTokenUserBalance: BigNumber;
      userCooldown: BigNumber;
      userIncentivesToClaim: BigNumber;
      userPermitNonce: BigNumber;
      0: BigNumber;
      1: BigNumber;
      2: BigNumber;
      3: BigNumber;
      4: BigNumber;
    }>;

    getStkUsersAaveData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<
      {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[]
    >;

    'getStkUsersAaveData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<
      {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[]
    >;

    getStkUsersBptData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<
      {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[]
    >;

    'getStkUsersBptData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<
      {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[]
    >;

    getUserStakeUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      2: BigNumber;
    }>;

    'getUserStakeUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      };
      2: BigNumber;
    }>;

    getUserUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      1: {
        stakeTokenTotalSupply: BigNumber;
        stakeCooldownSeconds: BigNumber;
        stakeUnstakeWindow: BigNumber;
        stakeTokenPriceEth: BigNumber;
        rewardTokenPriceEth: BigNumber;
        stakeApy: BigNumber;
        distributionPerSecond: BigNumber;
        distributionEnd: BigNumber;
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
        5: BigNumber;
        6: BigNumber;
        7: BigNumber;
        8: BigNumber;
        9: BigNumber;
        10: BigNumber;
        11: BigNumber;
        12: BigNumber;
      };
      2: BigNumber;
    }>;

    getUsersStakeUIData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      2: BigNumber;
    }>;

    'getUsersStakeUIData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<{
      0: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      1: {
        stakeTokenUserBalance: BigNumber;
        underlyingTokenUserBalance: BigNumber;
        userCooldown: BigNumber;
        userIncentivesToClaim: BigNumber;
        userPermitNonce: BigNumber;
        0: BigNumber;
        1: BigNumber;
        2: BigNumber;
        3: BigNumber;
        4: BigNumber;
      }[];
      2: BigNumber;
    }>;
  };

  filters: {};

  estimateGas: {
    getGeneralStakeUIData(overrides?: CallOverrides): Promise<BigNumber>;

    'getGeneralStakeUIData()'(overrides?: CallOverrides): Promise<BigNumber>;

    getStkAaveData(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStkBptData(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStkGeneralAaveData(overrides?: CallOverrides): Promise<BigNumber>;

    'getStkGeneralAaveData()'(overrides?: CallOverrides): Promise<BigNumber>;

    getStkGeneralBptData(overrides?: CallOverrides): Promise<BigNumber>;

    'getStkGeneralBptData()'(overrides?: CallOverrides): Promise<BigNumber>;

    getStkUserAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getStkUserAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStkUserBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getStkUserBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStkUsersAaveData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getStkUsersAaveData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getStkUsersBptData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getStkUsersBptData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getUserStakeUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getUserStakeUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getUserUIData(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    getUsersStakeUIData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;

    'getUsersStakeUIData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getGeneralStakeUIData(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getGeneralStakeUIData()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkGeneralAaveData(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkGeneralAaveData()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkGeneralBptData(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkGeneralBptData()'(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkUserAaveData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkUserAaveData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkUserBptData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkUserBptData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkUsersAaveData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkUsersAaveData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getStkUsersBptData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getStkUsersBptData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getUserStakeUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getUserStakeUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getUserUIData(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getUserUIData(address)'(
      user: string,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    getUsersStakeUIData(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;

    'getUsersStakeUIData(address[])'(
      user: string[],
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>;
  };
}
