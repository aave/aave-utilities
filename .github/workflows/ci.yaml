name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  ci:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'yarn'

      - name: prepare
        id: prepare
        shell: bash
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
          git config user.name "GitHub Actions Build"
          git config user.email "developers@aave.com"

      - name: install
        id: install
        run: |
          yarn install --frozen-lockfile

      - id: lint
        name: lint
        run: |
          yarn lint

      - id: cover
        name: cover
        run: |
          yarn cover

      - id: build
        name: build
        run: |
          yarn build
      # https://github.com/lerna/lerna/issues/2788 --no-verify-access
      # https://github.com/lerna/lerna/issues/1893 --preid ${{ github.sha }}
      - id: prerelease
        name: prerelease
        if: |
          github.event.pull_request.head.repo.full_name == github.repository &&
          !contains(github.head_ref, 'dependabot') &&
          github.ref != 'refs/heads/master'
        run: |
          yarn release:canary --yes --no-verify-access --dist-tag ${{ github.sha }} --preid ${{ github.sha }}
      #- uses: actions/github-script@v4
      #  if: |
      #    github.event.pull_request.head.repo.full_name == github.repository &&
      #    !contains(github.head_ref, 'dependabot') &&
      #    github.ref != 'refs/heads/master'
      #  with:
      #    script: |
      #      github.issues.createComment({
      #        issue_number: context.issue.number,
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        body: 'ðŸŽ‰ Canary Release. You can install canary version via `npm install package@next`'
      #      })
      - id: release
        name: release
        if: |
          github.ref == 'refs/heads/master' &&
          !contains(github.event.head_commit.message, 'chore(release)')
        run: |
          yarn release:check
          yarn release:latest --yes --no-verify-access
